
//                            Copyright James P. McNellis 2011 - 2012.                            //
//                   Distributed under the Boost Software License, Version 1.0.                   //
//     (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)    //

import "inspectable.idl";
import "windows.foundation.idl";
import "cxxreflect.reflection.idl";

#define COMPONENT_VERSION 1.0

namespace CxxReflect.Reflection.Native {

    [activatable(COMPONENT_VERSION)]
    [marshaling_behavior(agile)]
    [threading(both)]
    [version(COMPONENT_VERSION)]
    runtimeclass LoaderFactory
    {
        [default] interface CxxReflect.Reflection.ILoaderFactory;
    }

    // Loader is not activatable.  It can only be instantiated via LoaderFactory, which returns a
    // future.
    [marshaling_behavior(agile)]
    [threading(both)]
    [version(COMPONENT_VERSION)]
    runtimeclass Loader
    {
        [default] interface CxxReflect.Reflection.ILoader;
    }

}
