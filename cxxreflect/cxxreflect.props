<?xml version="1.0" encoding="utf-8"?>
<!--

//                            Copyright James P. McNellis 2011 - 2012.                            //
//                   Distributed under the Boost Software License, Version 1.0.                   //
//     (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)    //

-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
  Note:  The Visual C++ Standard Library implementation relies on ConcRT for its threading headers.
  ConcRT, in turn, is layout-dependent on /ZW, so we cannot mix /ZW object files with non-/ZW object
  files.  Thus, we have two sets of identical project configurations:  one with /ZW, the other
  without.
  -->

  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.vcxproj'">
    <!-- CxxReflectIsCxxReflectPart is true for all of the library parts -->
    <CxxReflectIsCxxReflectPart Condition="'$(MSBuildProjectName.Length)' &gt; 11 and '$(MSBuildProjectName.Substring(0, 11))' == 'cxxreflect_'">true</CxxReflectIsCxxReflectPart>
    <CxxReflectIsCxxReflectPart Condition="'$(CxxReflectIsCxxReflectPart)' == ''">false</CxxReflectIsCxxReflectPart>

    <!-- CxxReflectIsCxxReflectLibrary is true only for the final, complete library project -->
    <CxxReflectIsCxxReflectLibrary Condition="'$(MSBuildProjectName)' == 'cxxreflect'">true</CxxReflectIsCxxReflectLibrary>
    <CxxReflectIsCxxReflectLibrary Condition="'$(CxxReflectIsCxxReflectLibrary)' == ''">false</CxxReflectIsCxxReflectLibrary>

    <CxxReflectIsCxxReflect Condition="'$(CxxReflectIsCxxReflectPart)' == 'true' or '$(CxxReflectIsCxxReflectLibrary)' == 'true'">true</CxxReflectIsCxxReflect>
    <CxxReflectIsCxxReflect Condition="'$(CxxReflectIsCxxReflect)' == ''">false</CxxReflectIsCxxReflect>

    <!-- Non-/ZW configurations are enabled for the CxxReflect library projects and all non-AppContainerApplication projects -->
    <CxxReflectIncludeNonZWConfigurations Condition="'$(CxxReflectIsCxxReflect)' == 'true' or '$(AppContainerApplication)' != 'true'">true</CxxReflectIncludeNonZWConfigurations>
    <CxxReflectIncludeNonZWConfigurations Condition="'$(CxxReflectIncludeNonZWConfigurations)' == ''">false</CxxReflectIncludeNonZWConfigurations>

    <!-- /ZW configurations are enabled for the CxxReflect library projects and all AppContainerApplication projects -->
    <CxxReflectIncludeZWConfigurations Condition="'$(CxxReflectIsCxxReflect)' == 'true' or '$(AppContainerApplication)' == 'true'">true</CxxReflectIncludeZWConfigurations>
    <CxxReflectIncludeZWConfigurations Condition="'$(CxxReflectIncludeZWConfigurations)' == ''">false</CxxReflectIncludeZWConfigurations>

    <CxxReflectIncludeAnyCPUConfigurations>false</CxxReflectIncludeAnyCPUConfigurations>
  </PropertyGroup>

  <!-- All C# projects should include the AnyCPU configuration. -->
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj'">
    <CxxReflectIncludeAnyCPUConfigurations>true</CxxReflectIncludeAnyCPUConfigurations>
    <CxxReflectIsStandalone>true</CxxReflectIsStandalone>
  </PropertyGroup>

  <!-- Non-/ZW Project Configurations -->
  <ItemGroup Condition="'$(CxxReflectIncludeNonZWConfigurations)' == 'true'">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <!-- /ZW Project Configurations -->
  <ItemGroup Condition="'$(CxxReflectIncludeZWConfigurations)' == 'true'">
    <ProjectConfiguration Include="Debug(ZW)|Win32">
      <Configuration>Debug(ZW)</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug(ZW)|x64">
      <Configuration>Debug(ZW)</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release(ZW)|Win32">
      <Configuration>Release(ZW)</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release(ZW)|x64">
      <Configuration>Release(ZW)</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <ItemGroup Condition="'$(CxxReflectIncludeAnyCPUConfigurations)' == 'true'">
    <ProjectConfiguration Include="Debug|AnyCPU">
      <Configuration>Debug</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|AnyCPU">
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <PropertyGroup>
    <CxxReflectIsZwEnabled Condition="$(Configuration.Contains('ZW'))">true</CxxReflectIsZwEnabled>
    <CxxReflectIsZwEnabled Condition="'$(CxxReflectIsZwEnabled)' == ''">false</CxxReflectIsZwEnabled>
  </PropertyGroup>

  <PropertyGroup>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <RootNamespace>$(MSBuildProjectName)</RootNamespace>
    <VCTargetsPath Condition="'$(VCTargetsPath11)' != '' and '$(VSVersion)' == '' and '$(VisualStudioVersion)' == ''">$(VCTargetsPath11)</VCTargetsPath>
  </PropertyGroup>

  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />

  <!--
  Early Configuration Options
  -->

  <PropertyGroup>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <PlatformToolset>v110</PlatformToolset>
  </PropertyGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
    <LinkIncremental>true</LinkIncremental>
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Release'))">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <!--
    The BuildLog Path must be set after importing Microsoft.Cpp.Default.props but after importing
    Microsoft.Cpp.props.  If we include it too early, the Default.props will reset it back to its
    default.  If we include it too late, the build will already have created the log.
    -->
    <BuildLog>
      <Path>$(SolutionDir)build\intermediate\$(Platform)\$(Configuration)\$(MSBuildProjectName)\$(MsBuildProjectName).log</Path>
    </BuildLog>
  </ItemDefinitionGroup>

  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />

  <!--
  Late Configuration Options
  -->

  <PropertyGroup>
    <OutDir Condition="'$(CxxReflectIsCxxReflect)' == 'true'">$(SolutionDir)build\output\$(Platform)\$(Configuration)\cxxreflect\</OutDir>
    <OutDir Condition="'$(CxxReflectIsCxxReflect)' == 'false'">$(SolutionDir)build\output\$(Platform)\$(Configuration)\$(MSBuildProjectName)\</OutDir>
    <IntDir>$(SolutionDir)build\intermediate\$(Platform)\$(Configuration)\$(MSBuildProjectName)\</IntDir>

    <CxxReflectOutDir>$(SolutionDir)build\output\$(Platform)\$(Configuration)\cxxreflect\</CxxReflectOutDir>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <BuildLog>
      <Path>$(SolutionDir)build\intermediate\$(Platform)\$(Configuration)\$(MSBuildProjectName)\$(MsBuildProjectName).log</Path>
    </BuildLog>
    <ClCompile>
      <AdditionalIncludeDirectories>$(IncludePath);$(SolutionDir);$(VCInstallDir)Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>/D_SCL_SECURE_NO_WARNINGS %(AdditionalOptions)</AdditionalOptions>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <!--
      C4100 (unreferenced parameter) is emitted by various XAML-generated files and library headers
      C4512 (op= could not be generated) is a silly warning that we aren't interested in :-)
      C4702 (unreachable code) is hit in release builds by debug statements that are unreachable
      -->
      <DisableSpecificWarnings>4100;4512;4702</DisableSpecificWarnings>
      <ErrorReporting>None</ErrorReporting>
      <MinimalRebuild>false</MinimalRebuild>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <PreprocessorDefinitions>NOMINMAX;_CRT_SECURE_NO_WARNINGS;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <WarningLevel>Level4</WarningLevel>
    </ClCompile>
    <Lib>
      <!--
      LNK4264 is the "don't stick WinRT metadata in a static library.  We don't.  The linker
      complaineth.  We suppresseth.  LNK4221 is the "this file defines no symbols" warning.
      We expect this for some architecture-specific source files.
      -->
      <AdditionalLibraryDirectories>$(CxxReflectOutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/ignore:4264 /ignore:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <Link>
      <AdditionalDependencies>runtimeobject.lib;advapi32.lib;shlwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CxxReflectOutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <!--
      LNK4264 is the "don't stick WinRT metadata in a static library.  We don't.  The linker
      complaineth.  We suppresseth.  LNK4221 is the "this file defines no symbols" warning.
      We expect this for some architecture-specific source files.
      -->
      <AdditionalOptions>/ignore:4264 /ignore:4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup Condition="$(Configuration.Contains('Debug'))">
    <ClCompile>
      <BrowseInformation>true</BrowseInformation>
      <Optimization>Disabled</Optimization>
    </ClCompile>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup Condition="$(Configuration.Contains('Release'))">
    <ClCompile>
      <BrowseInformation>false</BrowseInformation>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <OmitFramePointers>true</OmitFramePointers>
      <Optimization>Full</Optimization>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>

  <!--
  For /ZW, we need to add the paths to Windows.winmd and Platform.winmd to the Using directories. We
  also need to actually set the /ZW compiler flag.
  -->

  <ItemDefinitionGroup Condition="'$(CxxReflectIsZwEnabled)' == 'true' and '$(CxxReflectIsCxxReflectPart)' == 'true'">
    <ClCompile>
      <AdditionalOptions>/ZW %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>"$(WindowsSdk80Path)References\CommonConfiguration\Neutral";"$(ProgramFiles)\Microsoft SDKs\Windows\v8.0\ExtensionSDKs\Microsoft.VCLibs\11.0\References\CommonConfiguration\neutral"</AdditionalUsingDirectories>
    </ClCompile>
  </ItemDefinitionGroup>

  <!-- Some extra loving care for C# projects -->
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj'">
    <CxxReflectIsStandalone>true</CxxReflectIsStandalone>
    <FileAlignment>512</FileAlignment>
    <IntermediateOutputPath>$(IntDir)</IntermediateOutputPath>
    <OutputPath>$(OutDir)</OutputPath>
    <Platform>AnyCPU</Platform>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj' and '$(Configuration)' == 'Debug'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj' and '$(Configuration)' == 'Release'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>

  <!-- All projects reference the core cxxreflect.lib project -->
  <Choose>
    <When Condition="'$(CxxReflectIsCxxReflect)' != 'true' and '$(CxxReflectIsStandalone)' != 'true'">
      <ItemGroup>
        <ProjectReference Include="$(SolutionDir)cxxreflect\cxxreflect.vcxproj">
          <Project>{1323C7D0-55D3-2A4A-EC85-6693FC4678FE}</Project>
        </ProjectReference>
      </ItemGroup>
    </When>
    <Otherwise>
    </Otherwise>
  </Choose>

  <ItemDefinitionGroup Condition="'$(CxxReflectIsCxxReflect)' != 'true' and '$(CxxReflectIsStandalone)' != 'true'">
    <Link>
      <AdditionalDependencies>cxxreflect.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>

</Project>
